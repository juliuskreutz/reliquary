// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `PropChangeReason.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:PropChangeReason)
pub enum PropChangeReason {
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_NONE)
    PROP_CHANGE_REASON_NONE = 0,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_STATUE_RECOVER)
    PROP_CHANGE_REASON_STATUE_RECOVER = 1,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_ENERGY_BALL)
    PROP_CHANGE_REASON_ENERGY_BALL = 2,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_ABILITY)
    PROP_CHANGE_REASON_ABILITY = 3,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_LEVELUP)
    PROP_CHANGE_REASON_LEVELUP = 4,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_ITEM)
    PROP_CHANGE_REASON_ITEM = 5,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_AVATAR_CARD)
    PROP_CHANGE_REASON_AVATAR_CARD = 6,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_CITY_LEVELUP)
    PROP_CHANGE_REASON_CITY_LEVELUP = 7,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_AVATAR_UPGRADE)
    PROP_CHANGE_REASON_AVATAR_UPGRADE = 8,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_AVATAR_PROMOTE)
    PROP_CHANGE_REASON_AVATAR_PROMOTE = 9,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_PLAYER_ADD_EXP)
    PROP_CHANGE_REASON_PLAYER_ADD_EXP = 10,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_FINISH_QUEST)
    PROP_CHANGE_REASON_FINISH_QUEST = 11,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_GM)
    PROP_CHANGE_REASON_GM = 12,
    // @@protoc_insertion_point(enum_value:PropChangeReason.PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL)
    PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL = 13,
}

impl ::protobuf::Enum for PropChangeReason {
    const NAME: &'static str = "PropChangeReason";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<PropChangeReason> {
        match value {
            0 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_NONE),
            1 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_STATUE_RECOVER),
            2 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ENERGY_BALL),
            3 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ABILITY),
            4 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_LEVELUP),
            5 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ITEM),
            6 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_CARD),
            7 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_CITY_LEVELUP),
            8 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_UPGRADE),
            9 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_PROMOTE),
            10 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_PLAYER_ADD_EXP),
            11 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_FINISH_QUEST),
            12 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_GM),
            13 => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<PropChangeReason> {
        match str {
            "PROP_CHANGE_REASON_NONE" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_NONE),
            "PROP_CHANGE_REASON_STATUE_RECOVER" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_STATUE_RECOVER),
            "PROP_CHANGE_REASON_ENERGY_BALL" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ENERGY_BALL),
            "PROP_CHANGE_REASON_ABILITY" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ABILITY),
            "PROP_CHANGE_REASON_LEVELUP" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_LEVELUP),
            "PROP_CHANGE_REASON_ITEM" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_ITEM),
            "PROP_CHANGE_REASON_AVATAR_CARD" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_CARD),
            "PROP_CHANGE_REASON_CITY_LEVELUP" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_CITY_LEVELUP),
            "PROP_CHANGE_REASON_AVATAR_UPGRADE" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_UPGRADE),
            "PROP_CHANGE_REASON_AVATAR_PROMOTE" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_AVATAR_PROMOTE),
            "PROP_CHANGE_REASON_PLAYER_ADD_EXP" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_PLAYER_ADD_EXP),
            "PROP_CHANGE_REASON_FINISH_QUEST" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_FINISH_QUEST),
            "PROP_CHANGE_REASON_GM" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_GM),
            "PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL" => ::std::option::Option::Some(PropChangeReason::PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [PropChangeReason] = &[
        PropChangeReason::PROP_CHANGE_REASON_NONE,
        PropChangeReason::PROP_CHANGE_REASON_STATUE_RECOVER,
        PropChangeReason::PROP_CHANGE_REASON_ENERGY_BALL,
        PropChangeReason::PROP_CHANGE_REASON_ABILITY,
        PropChangeReason::PROP_CHANGE_REASON_LEVELUP,
        PropChangeReason::PROP_CHANGE_REASON_ITEM,
        PropChangeReason::PROP_CHANGE_REASON_AVATAR_CARD,
        PropChangeReason::PROP_CHANGE_REASON_CITY_LEVELUP,
        PropChangeReason::PROP_CHANGE_REASON_AVATAR_UPGRADE,
        PropChangeReason::PROP_CHANGE_REASON_AVATAR_PROMOTE,
        PropChangeReason::PROP_CHANGE_REASON_PLAYER_ADD_EXP,
        PropChangeReason::PROP_CHANGE_REASON_FINISH_QUEST,
        PropChangeReason::PROP_CHANGE_REASON_GM,
        PropChangeReason::PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL,
    ];
}

impl ::protobuf::EnumFull for PropChangeReason {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("PropChangeReason").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = *self as usize;
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for PropChangeReason {
    fn default() -> Self {
        PropChangeReason::PROP_CHANGE_REASON_NONE
    }
}

impl PropChangeReason {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<PropChangeReason>("PropChangeReason")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x16PropChangeReason.proto*\x87\x04\n\x10PropChangeReason\x12\x1b\n\
    \x17PROP_CHANGE_REASON_NONE\x10\0\x12%\n!PROP_CHANGE_REASON_STATUE_RECOV\
    ER\x10\x01\x12\"\n\x1ePROP_CHANGE_REASON_ENERGY_BALL\x10\x02\x12\x1e\n\
    \x1aPROP_CHANGE_REASON_ABILITY\x10\x03\x12\x1e\n\x1aPROP_CHANGE_REASON_L\
    EVELUP\x10\x04\x12\x1b\n\x17PROP_CHANGE_REASON_ITEM\x10\x05\x12\"\n\x1eP\
    ROP_CHANGE_REASON_AVATAR_CARD\x10\x06\x12#\n\x1fPROP_CHANGE_REASON_CITY_\
    LEVELUP\x10\x07\x12%\n!PROP_CHANGE_REASON_AVATAR_UPGRADE\x10\x08\x12%\n!\
    PROP_CHANGE_REASON_AVATAR_PROMOTE\x10\t\x12%\n!PROP_CHANGE_REASON_PLAYER\
    _ADD_EXP\x10\n\x12#\n\x1fPROP_CHANGE_REASON_FINISH_QUEST\x10\x0b\x12\x19\
    \n\x15PROP_CHANGE_REASON_GM\x10\x0c\x120\n,PROP_CHANGE_REASON_MANUAL_ADJ\
    UST_WORLD_LEVEL\x10\rB\x1b\n\x19emu.grasscutter.net.protob\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(PropChangeReason::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
