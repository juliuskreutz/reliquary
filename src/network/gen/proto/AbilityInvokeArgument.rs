// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `AbilityInvokeArgument.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:AbilityInvokeArgument)
pub enum AbilityInvokeArgument {
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_NONE)
    ABILITY_INVOKE_ARGUMENT_NONE = 0,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE)
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST)
    ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT)
    ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM)
    ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM)
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP)
    ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE)
    ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE)
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH)
    ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER)
    ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE)
    ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE = 11,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER)
    ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY)
    ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY)
    ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY)
    ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE)
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL)
    ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER)
    ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE)
    ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION)
    ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_LOSE_HP)
    ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO)
    ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO = 22,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION)
    ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION = 23,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY)
    ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE)
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT)
    ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON)
    ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_BLINK)
    ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET)
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER)
    ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL)
    ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE)
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG)
    ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE)
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE)
    ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE)
    ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA)
    ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA = 63,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT)
    ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT = 64,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET)
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET = 65,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT)
    ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT = 66,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF)
    ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF = 67,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA)
    ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND)
    ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE)
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA)
    ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD)
    ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR)
    ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER)
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION)
    ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE)
    ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC)
    ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT)
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO)
    ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO = 113,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER)
    ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER = 114,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT = 115,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL)
    ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL = 116,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT)
    ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT = 117,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN)
    ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN = 118,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT)
    ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT = 119,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA)
    ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA = 120,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY = 121,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT)
    ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT = 122,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN)
    ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN = 123,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV)
    ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV = 124,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV)
    ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV = 125,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET)
    ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET = 126,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET = 127,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA)
    ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA = 128,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE)
    ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE = 129,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME)
    ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME = 130,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY)
    ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY = 131,
    // @@protoc_insertion_point(enum_value:AbilityInvokeArgument.ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER)
    ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER = 133,
}

impl ::protobuf::Enum for AbilityInvokeArgument {
    const NAME: &'static str = "AbilityInvokeArgument";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<AbilityInvokeArgument> {
        match value {
            0 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_NONE),
            1 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE),
            2 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST),
            3 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT),
            4 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM),
            5 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM),
            6 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP),
            7 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE),
            8 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE),
            9 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH),
            10 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER),
            11 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE),
            12 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER),
            13 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY),
            14 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY),
            15 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY),
            16 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE),
            17 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL),
            18 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER),
            19 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE),
            20 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION),
            21 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_LOSE_HP),
            22 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO),
            23 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION),
            50 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY),
            51 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE),
            52 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT),
            53 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON),
            54 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_BLINK),
            55 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET),
            56 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER),
            57 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL),
            58 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE),
            59 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG),
            60 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE),
            61 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE),
            62 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE),
            63 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA),
            64 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT),
            65 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET),
            66 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT),
            67 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF),
            100 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA),
            101 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND),
            102 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE),
            103 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA),
            104 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD),
            105 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD),
            106 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD),
            107 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR),
            108 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER),
            109 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION),
            110 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE),
            111 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC),
            112 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT),
            113 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO),
            114 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER),
            115 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT),
            116 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL),
            117 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT),
            118 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN),
            119 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT),
            120 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA),
            121 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY),
            122 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT),
            123 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN),
            124 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV),
            125 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV),
            126 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET),
            127 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET),
            128 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA),
            129 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE),
            130 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME),
            131 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY),
            133 => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<AbilityInvokeArgument> {
        match str {
            "ABILITY_INVOKE_ARGUMENT_NONE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_NONE),
            "ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE),
            "ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST),
            "ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT),
            "ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM),
            "ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM),
            "ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP),
            "ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE),
            "ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE),
            "ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH),
            "ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER),
            "ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE),
            "ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER),
            "ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY),
            "ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY),
            "ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY),
            "ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE),
            "ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL),
            "ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER),
            "ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE),
            "ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION),
            "ABILITY_INVOKE_ARGUMENT_META_LOSE_HP" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_LOSE_HP),
            "ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO),
            "ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION),
            "ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY),
            "ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE),
            "ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT),
            "ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON),
            "ABILITY_INVOKE_ARGUMENT_ACTION_BLINK" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_BLINK),
            "ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET),
            "ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER),
            "ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL),
            "ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE),
            "ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG),
            "ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE),
            "ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE),
            "ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE),
            "ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA),
            "ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT),
            "ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET),
            "ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT),
            "ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY),
            "ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER" => ::std::option::Option::Some(AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [AbilityInvokeArgument] = &[
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_NONE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_LOSE_HP,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_BLINK,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY,
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER,
    ];
}

impl ::protobuf::EnumFull for AbilityInvokeArgument {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("AbilityInvokeArgument").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_NONE => 0,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE => 1,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST => 2,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT => 3,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM => 4,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM => 5,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP => 6,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE => 7,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE => 8,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH => 9,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER => 10,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE => 11,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER => 12,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY => 13,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY => 14,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY => 15,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE => 16,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL => 17,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER => 18,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE => 19,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION => 20,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_LOSE_HP => 21,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO => 22,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ARKHE_REACTION => 23,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY => 24,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE => 25,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT => 26,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON => 27,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_BLINK => 28,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET => 29,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER => 30,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL => 31,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE => 32,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG => 33,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE => 34,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE => 35,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE => 36,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA => 37,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT => 38,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET => 39,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_FIREWORK_EFFECT => 40,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_ACTION_LEVEL_BANK_ADD_STUFF => 41,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA => 42,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND => 43,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE => 44,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA => 45,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD => 46,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD => 47,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD => 48,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR => 49,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER => 50,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION => 51,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE => 52,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC => 53,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT => 54,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO => 55,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWORKS_LAUNCHER => 56,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREATE_COUNT => 57,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL => 58,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT => 59,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN => 60,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_UI_INTERACT => 61,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_SHOOT_FROM_CAMERA => 62,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_BRICK_ACTIVITY => 63,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT => 64,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN => 65,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BROADCAST_GV => 66,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RECEIVE_GV => 67,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_TARGET => 68,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET => 69,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA => 70,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE => 71,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME => 72,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY => 73,
            AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER => 74,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for AbilityInvokeArgument {
    fn default() -> Self {
        AbilityInvokeArgument::ABILITY_INVOKE_ARGUMENT_NONE
    }
}

impl AbilityInvokeArgument {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<AbilityInvokeArgument>("AbilityInvokeArgument")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1bAbilityInvokeArgument.proto*\xc8\x1f\n\x15AbilityInvokeArgument\
    \x12\x20\n\x1cABILITY_INVOKE_ARGUMENT_NONE\x10\0\x120\n,ABILITY_INVOKE_A\
    RGUMENT_META_MODIFIER_CHANGE\x10\x01\x12@\n<ABILITY_INVOKE_ARGUMENT_META\
    _COMMAND_MODIFIER_CHANGE_REQUEST\x10\x02\x127\n3ABILITY_INVOKE_ARGUMENT_\
    META_SPECIAL_FLOAT_ARGUMENT\x10\x03\x12/\n+ABILITY_INVOKE_ARGUMENT_META_\
    OVERRIDE_PARAM\x10\x04\x125\n1ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRID\
    E_PARAM\x10\x05\x123\n/ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP\
    \x10\x06\x123\n/ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE\x10\x07\
    \x129\n5ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE\x10\x08\
    \x129\n5ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH\x10\t\x12?\
    \n;ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER\x10\n\x12\
    2\n.ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE\x10\x0b\x124\n0ABILIT\
    Y_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER\x10\x0c\x120\n,ABILITY_INVOKE\
    _ARGUMENT_META_ADD_NEW_ABILITY\x10\r\x12/\n+ABILITY_INVOKE_ARGUMENT_META\
    _REMOVE_ABILITY\x10\x0e\x12:\n6ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER\
    _APPLY_ENTITY\x10\x0f\x12;\n7ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURAB\
    ILITY_CHANGE\x10\x10\x128\n4ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTIO\
    N_VISUAL\x10\x11\x123\n/ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER\
    \x10\x12\x12<\n8ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE\
    \x10\x13\x129\n5ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION\
    \x10\x14\x12(\n$ABILITY_INVOKE_ARGUMENT_META_LOSE_HP\x10\x15\x123\n/ABIL\
    ITY_INVOKE_ARGUMENT_META_DURABILITY_IS_ZERO\x10\x16\x127\n3ABILITY_INVOK\
    E_ARGUMENT_META_TRIGGER_ARKHE_REACTION\x10\x17\x122\n.ABILITY_INVOKE_ARG\
    UMENT_ACTION_TRIGGER_ABILITY\x102\x123\n/ABILITY_INVOKE_ARGUMENT_ACTION_\
    SET_CRASH_DAMAGE\x103\x12)\n%ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT\x104\
    \x12)\n%ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON\x105\x12(\n$ABILITY_INVOKE\
    _ARGUMENT_ACTION_BLINK\x106\x120\n,ABILITY_INVOKE_ARGUMENT_ACTION_CREATE\
    _GADGET\x107\x127\n3ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER\
    \x108\x125\n1ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL\x109\x12@\
    \n<ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE\x10:\x12\
    5\n1ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG\x10;\x12.\n*ABILIT\
    Y_INVOKE_ARGUMENT_ACTION_CREATE_TILE\x10<\x12/\n+ABILITY_INVOKE_ARGUMENT\
    _ACTION_DESTROY_TILE\x10=\x123\n/ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFT\
    ER_IMAGE\x10>\x121\n-ABILITY_INVOKE_ARGUMENT_ACTION_DEDUCT_STAMINA\x10?\
    \x12-\n)ABILITY_INVOKE_ARGUMENT_ACTION_HIT_EFFECT\x10@\x12:\n6ABILITY_IN\
    VOKE_ARGUMENT_ACTION_SET_BULLET_TRACK_TARGET\x10A\x122\n.ABILITY_INVOKE_\
    ARGUMENT_ACTION_FIREWORK_EFFECT\x10B\x127\n3ABILITY_INVOKE_ARGUMENT_ACTI\
    ON_LEVEL_BANK_ADD_STUFF\x10C\x128\n4ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR\
    _STEER_BY_CAMERA\x10d\x120\n,ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEN\
    D\x10e\x12+\n'ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE\x10f\x12.\n*ABILIT\
    Y_INVOKE_ARGUMENT_MIXIN_COST_STAMINA\x10g\x12.\n*ABILITY_INVOKE_ARGUMENT\
    _MIXIN_ELITE_SHIELD\x10h\x120\n,ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SH\
    IELD\x10i\x12/\n+ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD\x10j\x12,\n\
    (ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR\x10k\x123\n/ABILITY_INVOKE_ARG\
    UMENT_MIXIN_WIND_SEED_SPAWNER\x10l\x12?\n;ABILITY_INVOKE_ARGUMENT_MIXIN_\
    DO_ACTION_BY_ELEMENT_REACTION\x10m\x12;\n7ABILITY_INVOKE_ARGUMENT_MIXIN_\
    FIELD_ENTITY_COUNT_CHANGE\x10n\x121\n-ABILITY_INVOKE_ARGUMENT_MIXIN_SCEN\
    E_PROP_SYNC\x10o\x123\n/ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT\
    \x10p\x12U\nQABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_SELF_MODIFIER_EL\
    EMENT_DURABILITY_RATIO\x10q\x124\n0ABILITY_INVOKE_ARGUMENT_MIXIN_FIREWOR\
    KS_LAUNCHER\x10r\x12<\n8ABILITY_INVOKE_ARGUMENT_MIXIN_ATTACK_RESULT_CREA\
    TE_COUNT\x10s\x122\n.ABILITY_INVOKE_ARGUMENT_MIXIN_UGC_TIME_CONTROL\x10t\
    \x12/\n+ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_COMBAT\x10u\x12@\n<ABILITY_\
    INVOKE_ARGUMENT_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN\x10v\x12-\n)ABILITY\
    _INVOKE_ARGUMENT_MIXIN_UI_INTERACT\x10w\x123\n/ABILITY_INVOKE_ARGUMENT_M\
    IXIN_SHOOT_FROM_CAMERA\x10x\x126\n2ABILITY_INVOKE_ARGUMENT_MIXIN_ERASE_B\
    RICK_ACTIVITY\x10y\x12*\n&ABILITY_INVOKE_ARGUMENT_MIXIN_BREAKOUT\x10z\
    \x12-\n)ABILITY_INVOKE_ARGUMENT_MIXIN_DAMAGE_LOAN\x10{\x12.\n*ABILITY_IN\
    VOKE_ARGUMENT_MIXIN_BROADCAST_GV\x10|\x12,\n(ABILITY_INVOKE_ARGUMENT_MIX\
    IN_RECEIVE_GV\x10}\x127\n3ABILITY_INVOKE_ARGUMENT_MIXIN_RAYCAST_SELECT_T\
    ARGET\x10~\x127\n3ABILITY_INVOKE_ARGUMENT_MIXIN_ENERGY_CRYSTAL_TARGET\
    \x10\x7f\x129\n4ABILITY_INVOKE_ARGUMENT_MIXIN_ROTATION_FOLLOW_CAMERA\x10\
    \x80\x01\x120\n+ABILITY_INVOKE_ARGUMENT_MIXIN_BUOYANT_FORCE\x10\x81\x01\
    \x125\n0ABILITY_INVOKE_ARGUMENT_MIXIN_FILMFEST_BALL_GAME\x10\x82\x01\x12\
    4\n/ABILITY_INVOKE_ARGUMENT_MIXIN_CHECK_SCAN_ENTITY\x10\x83\x01\x124\n/A\
    BILITY_INVOKE_ARGUMENT_MIXIN_TIME_TRACK_PLAYER\x10\x85\x01B\x1b\n\x19emu\
    .grasscutter.net.protob\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(AbilityInvokeArgument::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
