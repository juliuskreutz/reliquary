// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `ChangeHpReason.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:ChangeHpReason)
pub enum ChangeHpReason {
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_NONE)
    CHANGE_HP_REASON_NONE = 0,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_AVATAR)
    CHANGE_HP_REASON_SUB_AVATAR = 1,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_MONSTER)
    CHANGE_HP_REASON_SUB_MONSTER = 2,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_GEAR)
    CHANGE_HP_REASON_SUB_GEAR = 3,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_ENVIR)
    CHANGE_HP_REASON_SUB_ENVIR = 4,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_FALL)
    CHANGE_HP_REASON_SUB_FALL = 5,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_DRAWN)
    CHANGE_HP_REASON_SUB_DRAWN = 6,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_ABYSS)
    CHANGE_HP_REASON_SUB_ABYSS = 7,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_ABILITY)
    CHANGE_HP_REASON_SUB_ABILITY = 8,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_SUMMON)
    CHANGE_HP_REASON_SUB_SUMMON = 9,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_SCRIPT)
    CHANGE_HP_REASON_SUB_SCRIPT = 10,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_GM)
    CHANGE_HP_REASON_SUB_GM = 11,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_KILL_SELF)
    CHANGE_HP_REASON_SUB_KILL_SELF = 12,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_CLIMATE_COLD)
    CHANGE_HP_REASON_SUB_CLIMATE_COLD = 13,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_STORM_LIGHTNING)
    CHANGE_HP_REASON_SUB_STORM_LIGHTNING = 14,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET)
    CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET = 15,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_REPLACE)
    CHANGE_HP_REASON_SUB_REPLACE = 16,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_PLAYER_LEAVE)
    CHANGE_HP_REASON_SUB_PLAYER_LEAVE = 17,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ATTACK_BY_ENERGY)
    CHANGE_HP_REASON_ATTACK_BY_ENERGY = 18,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ATTACK_BY_RECYCLE)
    CHANGE_HP_REASON_ATTACK_BY_RECYCLE = 19,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_PLAYER_BACK)
    CHANGE_HP_REASON_SUB_PLAYER_BACK = 20,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_UGC)
    CHANGE_HP_REASON_SUB_UGC = 21,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION)
    CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION = 22,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_SUB_DESTROY_SELF)
    CHANGE_HP_REASON_SUB_DESTROY_SELF = 23,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_BY_LUA)
    CHANGE_HP_REASON_BY_LUA = 51,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_ABILITY)
    CHANGE_HP_REASON_ADD_ABILITY = 101,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_ITEM)
    CHANGE_HP_REASON_ADD_ITEM = 102,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_REVIVE)
    CHANGE_HP_REASON_ADD_REVIVE = 103,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_UPGRADE)
    CHANGE_HP_REASON_ADD_UPGRADE = 104,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_STATUE)
    CHANGE_HP_REASON_ADD_STATUE = 105,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_BACKGROUND)
    CHANGE_HP_REASON_ADD_BACKGROUND = 106,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_GM)
    CHANGE_HP_REASON_ADD_GM = 107,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY)
    CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY = 108,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING)
    CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING = 109,
    // @@protoc_insertion_point(enum_value:ChangeHpReason.CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5)
    CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5 = 110,
}

impl ::protobuf::Enum for ChangeHpReason {
    const NAME: &'static str = "ChangeHpReason";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<ChangeHpReason> {
        match value {
            0 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_NONE),
            1 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_AVATAR),
            2 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_MONSTER),
            3 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_GEAR),
            4 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ENVIR),
            5 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_FALL),
            6 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DRAWN),
            7 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ABYSS),
            8 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ABILITY),
            9 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_SUMMON),
            10 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_SCRIPT),
            11 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_GM),
            12 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SELF),
            13 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_CLIMATE_COLD),
            14 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_STORM_LIGHTNING),
            15 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET),
            16 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_REPLACE),
            17 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_LEAVE),
            18 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_ENERGY),
            19 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_RECYCLE),
            20 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_BACK),
            21 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_UGC),
            22 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION),
            23 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DESTROY_SELF),
            51 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_BY_LUA),
            101 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ABILITY),
            102 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ITEM),
            103 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_REVIVE),
            104 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_UPGRADE),
            105 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_STATUE),
            106 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_BACKGROUND),
            107 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_GM),
            108 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY),
            109 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING),
            110 => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<ChangeHpReason> {
        match str {
            "CHANGE_HP_REASON_NONE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_NONE),
            "CHANGE_HP_REASON_SUB_AVATAR" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_AVATAR),
            "CHANGE_HP_REASON_SUB_MONSTER" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_MONSTER),
            "CHANGE_HP_REASON_SUB_GEAR" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_GEAR),
            "CHANGE_HP_REASON_SUB_ENVIR" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ENVIR),
            "CHANGE_HP_REASON_SUB_FALL" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_FALL),
            "CHANGE_HP_REASON_SUB_DRAWN" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DRAWN),
            "CHANGE_HP_REASON_SUB_ABYSS" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ABYSS),
            "CHANGE_HP_REASON_SUB_ABILITY" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_ABILITY),
            "CHANGE_HP_REASON_SUB_SUMMON" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_SUMMON),
            "CHANGE_HP_REASON_SUB_SCRIPT" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_SCRIPT),
            "CHANGE_HP_REASON_SUB_GM" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_GM),
            "CHANGE_HP_REASON_SUB_KILL_SELF" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SELF),
            "CHANGE_HP_REASON_SUB_CLIMATE_COLD" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_CLIMATE_COLD),
            "CHANGE_HP_REASON_SUB_STORM_LIGHTNING" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_STORM_LIGHTNING),
            "CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET),
            "CHANGE_HP_REASON_SUB_REPLACE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_REPLACE),
            "CHANGE_HP_REASON_SUB_PLAYER_LEAVE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_LEAVE),
            "CHANGE_HP_REASON_ATTACK_BY_ENERGY" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_ENERGY),
            "CHANGE_HP_REASON_ATTACK_BY_RECYCLE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_RECYCLE),
            "CHANGE_HP_REASON_SUB_PLAYER_BACK" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_BACK),
            "CHANGE_HP_REASON_SUB_UGC" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_UGC),
            "CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION),
            "CHANGE_HP_REASON_SUB_DESTROY_SELF" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_SUB_DESTROY_SELF),
            "CHANGE_HP_REASON_BY_LUA" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_BY_LUA),
            "CHANGE_HP_REASON_ADD_ABILITY" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ABILITY),
            "CHANGE_HP_REASON_ADD_ITEM" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ITEM),
            "CHANGE_HP_REASON_ADD_REVIVE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_REVIVE),
            "CHANGE_HP_REASON_ADD_UPGRADE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_UPGRADE),
            "CHANGE_HP_REASON_ADD_STATUE" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_STATUE),
            "CHANGE_HP_REASON_ADD_BACKGROUND" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_BACKGROUND),
            "CHANGE_HP_REASON_ADD_GM" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_GM),
            "CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY),
            "CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING),
            "CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5" => ::std::option::Option::Some(ChangeHpReason::CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [ChangeHpReason] = &[
        ChangeHpReason::CHANGE_HP_REASON_NONE,
        ChangeHpReason::CHANGE_HP_REASON_SUB_AVATAR,
        ChangeHpReason::CHANGE_HP_REASON_SUB_MONSTER,
        ChangeHpReason::CHANGE_HP_REASON_SUB_GEAR,
        ChangeHpReason::CHANGE_HP_REASON_SUB_ENVIR,
        ChangeHpReason::CHANGE_HP_REASON_SUB_FALL,
        ChangeHpReason::CHANGE_HP_REASON_SUB_DRAWN,
        ChangeHpReason::CHANGE_HP_REASON_SUB_ABYSS,
        ChangeHpReason::CHANGE_HP_REASON_SUB_ABILITY,
        ChangeHpReason::CHANGE_HP_REASON_SUB_SUMMON,
        ChangeHpReason::CHANGE_HP_REASON_SUB_SCRIPT,
        ChangeHpReason::CHANGE_HP_REASON_SUB_GM,
        ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SELF,
        ChangeHpReason::CHANGE_HP_REASON_SUB_CLIMATE_COLD,
        ChangeHpReason::CHANGE_HP_REASON_SUB_STORM_LIGHTNING,
        ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET,
        ChangeHpReason::CHANGE_HP_REASON_SUB_REPLACE,
        ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_LEAVE,
        ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_ENERGY,
        ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_RECYCLE,
        ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_BACK,
        ChangeHpReason::CHANGE_HP_REASON_SUB_UGC,
        ChangeHpReason::CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION,
        ChangeHpReason::CHANGE_HP_REASON_SUB_DESTROY_SELF,
        ChangeHpReason::CHANGE_HP_REASON_BY_LUA,
        ChangeHpReason::CHANGE_HP_REASON_ADD_ABILITY,
        ChangeHpReason::CHANGE_HP_REASON_ADD_ITEM,
        ChangeHpReason::CHANGE_HP_REASON_ADD_REVIVE,
        ChangeHpReason::CHANGE_HP_REASON_ADD_UPGRADE,
        ChangeHpReason::CHANGE_HP_REASON_ADD_STATUE,
        ChangeHpReason::CHANGE_HP_REASON_ADD_BACKGROUND,
        ChangeHpReason::CHANGE_HP_REASON_ADD_GM,
        ChangeHpReason::CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY,
        ChangeHpReason::CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING,
        ChangeHpReason::CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5,
    ];
}

impl ::protobuf::EnumFull for ChangeHpReason {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("ChangeHpReason").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            ChangeHpReason::CHANGE_HP_REASON_NONE => 0,
            ChangeHpReason::CHANGE_HP_REASON_SUB_AVATAR => 1,
            ChangeHpReason::CHANGE_HP_REASON_SUB_MONSTER => 2,
            ChangeHpReason::CHANGE_HP_REASON_SUB_GEAR => 3,
            ChangeHpReason::CHANGE_HP_REASON_SUB_ENVIR => 4,
            ChangeHpReason::CHANGE_HP_REASON_SUB_FALL => 5,
            ChangeHpReason::CHANGE_HP_REASON_SUB_DRAWN => 6,
            ChangeHpReason::CHANGE_HP_REASON_SUB_ABYSS => 7,
            ChangeHpReason::CHANGE_HP_REASON_SUB_ABILITY => 8,
            ChangeHpReason::CHANGE_HP_REASON_SUB_SUMMON => 9,
            ChangeHpReason::CHANGE_HP_REASON_SUB_SCRIPT => 10,
            ChangeHpReason::CHANGE_HP_REASON_SUB_GM => 11,
            ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SELF => 12,
            ChangeHpReason::CHANGE_HP_REASON_SUB_CLIMATE_COLD => 13,
            ChangeHpReason::CHANGE_HP_REASON_SUB_STORM_LIGHTNING => 14,
            ChangeHpReason::CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET => 15,
            ChangeHpReason::CHANGE_HP_REASON_SUB_REPLACE => 16,
            ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_LEAVE => 17,
            ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_ENERGY => 18,
            ChangeHpReason::CHANGE_HP_REASON_ATTACK_BY_RECYCLE => 19,
            ChangeHpReason::CHANGE_HP_REASON_SUB_PLAYER_BACK => 20,
            ChangeHpReason::CHANGE_HP_REASON_SUB_UGC => 21,
            ChangeHpReason::CHANGE_HP_REASON_SUB_DIRTY_WATER_EROSION => 22,
            ChangeHpReason::CHANGE_HP_REASON_SUB_DESTROY_SELF => 23,
            ChangeHpReason::CHANGE_HP_REASON_BY_LUA => 24,
            ChangeHpReason::CHANGE_HP_REASON_ADD_ABILITY => 25,
            ChangeHpReason::CHANGE_HP_REASON_ADD_ITEM => 26,
            ChangeHpReason::CHANGE_HP_REASON_ADD_REVIVE => 27,
            ChangeHpReason::CHANGE_HP_REASON_ADD_UPGRADE => 28,
            ChangeHpReason::CHANGE_HP_REASON_ADD_STATUE => 29,
            ChangeHpReason::CHANGE_HP_REASON_ADD_BACKGROUND => 30,
            ChangeHpReason::CHANGE_HP_REASON_ADD_GM => 31,
            ChangeHpReason::CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY => 32,
            ChangeHpReason::CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING => 33,
            ChangeHpReason::CHANGE_HP_REASON_ADD_EFFIGY_CHALLENGE_V5 => 34,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for ChangeHpReason {
    fn default() -> Self {
        ChangeHpReason::CHANGE_HP_REASON_NONE
    }
}

impl ChangeHpReason {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<ChangeHpReason>("ChangeHpReason")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x14ChangeHpReason.proto*\xee\t\n\x0eChangeHpReason\x12\x19\n\x15CHANG\
    E_HP_REASON_NONE\x10\0\x12\x1f\n\x1bCHANGE_HP_REASON_SUB_AVATAR\x10\x01\
    \x12\x20\n\x1cCHANGE_HP_REASON_SUB_MONSTER\x10\x02\x12\x1d\n\x19CHANGE_H\
    P_REASON_SUB_GEAR\x10\x03\x12\x1e\n\x1aCHANGE_HP_REASON_SUB_ENVIR\x10\
    \x04\x12\x1d\n\x19CHANGE_HP_REASON_SUB_FALL\x10\x05\x12\x1e\n\x1aCHANGE_\
    HP_REASON_SUB_DRAWN\x10\x06\x12\x1e\n\x1aCHANGE_HP_REASON_SUB_ABYSS\x10\
    \x07\x12\x20\n\x1cCHANGE_HP_REASON_SUB_ABILITY\x10\x08\x12\x1f\n\x1bCHAN\
    GE_HP_REASON_SUB_SUMMON\x10\t\x12\x1f\n\x1bCHANGE_HP_REASON_SUB_SCRIPT\
    \x10\n\x12\x1b\n\x17CHANGE_HP_REASON_SUB_GM\x10\x0b\x12\"\n\x1eCHANGE_HP\
    _REASON_SUB_KILL_SELF\x10\x0c\x12%\n!CHANGE_HP_REASON_SUB_CLIMATE_COLD\
    \x10\r\x12(\n$CHANGE_HP_REASON_SUB_STORM_LIGHTNING\x10\x0e\x12+\n'CHANGE\
    _HP_REASON_SUB_KILL_SERVER_GADGET\x10\x0f\x12\x20\n\x1cCHANGE_HP_REASON_\
    SUB_REPLACE\x10\x10\x12%\n!CHANGE_HP_REASON_SUB_PLAYER_LEAVE\x10\x11\x12\
    %\n!CHANGE_HP_REASON_ATTACK_BY_ENERGY\x10\x12\x12&\n\"CHANGE_HP_REASON_A\
    TTACK_BY_RECYCLE\x10\x13\x12$\n\x20CHANGE_HP_REASON_SUB_PLAYER_BACK\x10\
    \x14\x12\x1c\n\x18CHANGE_HP_REASON_SUB_UGC\x10\x15\x12,\n(CHANGE_HP_REAS\
    ON_SUB_DIRTY_WATER_EROSION\x10\x16\x12%\n!CHANGE_HP_REASON_SUB_DESTROY_S\
    ELF\x10\x17\x12\x1b\n\x17CHANGE_HP_REASON_BY_LUA\x103\x12\x20\n\x1cCHANG\
    E_HP_REASON_ADD_ABILITY\x10e\x12\x1d\n\x19CHANGE_HP_REASON_ADD_ITEM\x10f\
    \x12\x1f\n\x1bCHANGE_HP_REASON_ADD_REVIVE\x10g\x12\x20\n\x1cCHANGE_HP_RE\
    ASON_ADD_UPGRADE\x10h\x12\x1f\n\x1bCHANGE_HP_REASON_ADD_STATUE\x10i\x12#\
    \n\x1fCHANGE_HP_REASON_ADD_BACKGROUND\x10j\x12\x1b\n\x17CHANGE_HP_REASON\
    _ADD_GM\x10k\x12.\n*CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY\x10l\x12*\
    \n&CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING\x10m\x12,\n(CHANGE_HP_REASON_A\
    DD_EFFIGY_CHALLENGE_V5\x10nB\x1b\n\x19emu.grasscutter.net.protob\x06prot\
    o3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(ChangeHpReason::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
